version: "3.9"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - crypto-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      start_period: 5s
      interval: 10s
      timeout: 10s
      retries: 5
  dtm:
    image: yedf/dtm
    restart: always
    ports:
      - "36790:36790" # grpc
      - "36789:36789" # ui
    networks:
      - crypto-network
  mysql:
    image: mysql:8
    restart: always
    ports:
      - "8092:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=saga
      - MYSQL_USER=saga
      - MYSQL_PASSWORD=saga
    networks:
      - crypto-network

  crypto-app:
    build:
      context: crypto-app
      dockerfile: Dockerfile
    environment:
      - AMQP_URL=amqp://guest:guest@rabbitmq/
    ports:
      - "8080:8080"
    networks:
      - crypto-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  logs-consumer:
    build:
      context: logs-consumer
      dockerfile: Dockerfile
    environment:
      - AMQP_URL=amqp://guest:guest@rabbitmq:5672/
    networks:
      - crypto-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      crypto-app:
        condition: service_started

  customers:
    build:
      context: customers-service
      dockerfile: Dockerfile
    environment:
      - DTM_COORDINATOR=http://dtm:36789/api/dtmsvr
      - CUSTOMERS_SERVICE_URL=http://customers:8080
      - CUSTOMERS_SERVICE_PORT=:8080
      - MYSQL_DSN=saga:saga@tcp(mysql:3306)/saga?charset=utf8mb4&parseTime=True&loc=Local
    ports:
      - "8090:8080"
    networks:
      - crypto-network
    depends_on:
      - dtm
      - mysql

networks:
  crypto-network:
    driver: bridge